-- ‚úÖ Anti-Detection + Spoof Environment ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏î‡∏¥‡∏ô
-- ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Remote Logging, Debug Traceback, Name Spoof

-- ‡∏õ‡∏•‡∏≠‡∏° debug.traceback ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á Stacktrace
getgenv().debug = getgenv().debug or {}
getgenv().debug.traceback = function(msg, lvl)
    return msg
end

-- Hook ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏°‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö
local hook = hookfunction or replaceclosure

-- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ log remote call (‡∏ö‡∏≤‡∏á‡πÄ‡∏Å‡∏°‡πÉ‡∏ä‡πâ ClientLog)
local success, remote = pcall(function()
    return game:GetService("ReplicatedStorage"):FindFirstChild("ClientLog")
end)

if success and remote then
    hook(remote.FireServer, function(...)
        return nil
    end)
end

-- ‡∏õ‡∏•‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô script ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á
local oldName = game.Players.LocalPlayer.Name
hook(game.Players.LocalPlayer.GetName, function()
    return "Loading..."
end)

-- ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à username ‡πÉ‡∏ô scripts
if setidentity then
    pcall(function()
        setidentity(2) -- ‡∏¢‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
    end)
end

-- ‡∏õ‡∏•‡∏≠‡∏°‡∏ï‡∏±‡∏ß‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô wait ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏£‡∏ß‡∏à
if hookfunction and wait then
    hook(wait, function(t)
        return task.wait(t or 0.1)
    end)
end

-- ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡πà‡∏á‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à (no sit)
game:GetService("RunService").Stepped:Connect(function()
    local human = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    if human and human.Sit then
        human.Sit = false
    end
end)

-- ‚úÖ ‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏Ç‡∏ß‡∏≤‡∏á
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

RunService.Stepped:Connect(function()
    local char = LocalPlayer.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    if not hrp then return end

    local rayOrigin = hrp.Position
    local rayDirection = hrp.CFrame.LookVector * 3
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {char}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

    local rayResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

    if rayResult then
        hrp.Velocity = hrp.CFrame.LookVector * -20 -- ‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢
        task.wait(0.1)
    end
end)

-- ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ß‡πâ‡∏Å‡πà‡∏≠‡∏ô‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡∏¥‡∏ô
-- dofile("anti_detect.lua") ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏™‡πà‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå

-- ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡∏ö‡πà‡∏≠‡∏¢‡πÉ‡∏ô public script ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏≤‡∏á‡πÄ‡∏Å‡∏°‡∏≠‡∏≤‡∏à‡∏ï‡∏£‡∏ß‡∏à‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local lastMoved = tick()

-- üß≠ ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
function randomWalk()
	local direction = Vector3.new(math.random(-1, 1), 0, math.random(-1, 1)).Unit
	local moveSpeed = 8
	local duration = math.random(2, 4)

	Character:PivotTo(CFrame.new(Character:GetPivot().Position) * CFrame.new(direction * moveSpeed))
	wait(duration)

	-- ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡∏Ç‡∏¢‡∏±‡∏ö
	lastMoved = tick()
end

-- ‚õ∑Ô∏è ‡∏Å‡∏£‡∏∞‡πÇ‡∏î‡∏î‡∏´‡∏•‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏Å‡∏µ‡∏î‡∏Ç‡∏ß‡∏≤‡∏á
function jumpIfObstacle()
	local rayOrigin = Character:GetPivot().Position
	local rayDirection = Character:GetPivot().LookVector * 4

	local raycastResult = workspace:Raycast(rayOrigin, rayDirection, RaycastParams.new())
	if raycastResult then
		Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
	end
end

-- üîÑ ‡∏´‡∏°‡∏∏‡∏ô‡∏à‡∏≠‡∏ó‡∏∏‡∏Å 8 ‡∏ß‡∏¥
task.spawn(function()
	while true do
		wait(8)
		local root = Character:FindFirstChild("HumanoidRootPart")
		if root then
			root.CFrame = root.CFrame * CFrame.Angles(0, math.rad(math.random(-45, 45)), 0)
		end
	end
end)

-- üïí Hop ‡πÑ‡∏õ‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏Ñ‡∏ô‡πÄ‡∏•‡πà‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡∏ó‡∏∏‡∏Å 2 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡∏£‡∏∂‡πà‡∏á
task.spawn(function()
	while true do
		wait(9000) -- 2.5 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á = 9000 ‡∏ß‡∏¥
		local TeleportService = game:GetService("TeleportService")
		local PlaceId = game.PlaceId

		local function hopLowServer()
			local servers = {}
			local req = syn and syn.request or http_request or request
			local body = req({
				Url = "https://games.roblox.com/v1/games/" .. PlaceId .. "/servers/Public?sortOrder=Asc&limit=100",
				Method = "GET"
			})
			local data = game:GetService("HttpService"):JSONDecode(body.Body)
			for _, server in pairs(data.data) do
				if server.playing < server.maxPlayers then
					TeleportService:TeleportToPlaceInstance(PlaceId, server.id, LocalPlayer)
					break
				end
			end
		end

		hopLowServer()
	end
end)

-- üéÆ ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏´‡∏•‡∏±‡∏Å
while true do
	randomWalk()
	jumpIfObstacle()
	wait(1)
end
